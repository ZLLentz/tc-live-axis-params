<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="FB_AxisReadNC" Id="{ae0d0d38-2171-41e5-b49c-714adaf92c76}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AxisReadNC
VAR_INPUT
	bExecute: BOOL;
	bReset: BOOL;
END_VAR
VAR_OUTPUT
	bDone: BOOL;
	bBusy: BOOL;
	bError: BOOL;
	iErrorID: UDINT;
END_VAR
VAR_IN_OUT
	stConfig: ST_AxisParams;
	Axis: AXIS_REF;
END_VAR
VAR
	iCycles: INT := 0;
	bReadOk: BOOL := FALSE;
	bInnerExec: BOOL := FALSE;
	fbReadRefVel: MC_ReadParameter;
  	fbReadRefVelRisingEdge: R_TRIG;
	fbReadMaxVel: MC_ReadParameter;
  	fbReadMaxVelRisingEdge: R_TRIG;
	fbReadMaxAcc: MC_ReadParameter;
  	fbReadMaxAccRisingEdge: R_TRIG;
	fbReadMaxDec: MC_ReadParameter;
  	fbReadMaxDecRisingEdge: R_TRIG;
	fbReadAcc: MC_ReadParameter;
  	fbReadAccRisingEdge: R_TRIG;
	fbReadDec: MC_ReadParameter;
  	fbReadDecRisingEdge: R_TRIG;
	fbReadJerk: MC_ReadParameter;
  	fbReadJerkRisingEdge: R_TRIG;
	fbReadHomeSearch: MC_ReadParameter;
  	fbReadHomeSearchRisingEdge: R_TRIG;
	fbReadHomeSync: MC_ReadParameter;
  	fbReadHomeSyncRisingEdge: R_TRIG;
	fbReadManFast: MC_ReadParameter;
  	fbReadManFastRisingEdge: R_TRIG;
	fbReadManSlow: MC_ReadParameter;
  	fbReadManSlowRisingEdge: R_TRIG;
	fbReadDeadTime: MC_ReadParameter;
  	fbReadDeadTimeRisingEdge: R_TRIG;
	fbReadEncScale: MC_ReadParameter;
  	fbReadEncScaleRisingEdge: R_TRIG;
	fbReadEncInvert: MC_ReadBoolParameter;
  	fbReadEncInvertRisingEdge: R_TRIG;
	fbReadMotInvert: MC_ReadBoolParameter;
  	fbReadMotInvertRisingEdge: R_TRIG;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// File auto-generated! Take care editing!
// Clears errors and allows a new read
IF bReset THEN
	bExecute := FALSE;
	bReset := FALSE;
END_IF
// Fails in the first n cycles depending on terminals, wait a bit
IF NOT bReadOk THEN
	iCycles := iCycles + 1;
	IF iCycles > 100 THEN
		bReadOk := TRUE;
	END_IF
END_IF
bInnerExec := bExecute AND bReadOk;
fbReadRefVel(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisRefVeloOnRefOutput,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadRefVelRisingEdge(CLK:=fbReadRefVel.Done);
IF fbReadRefVelRisingEdge.Q AND NOT fbReadRefVel.Error THEN
	stConfig.ref_vel := fbReadRefVel.Value;
END_IF
fbReadMaxVel(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisMaxVelocity,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadMaxVelRisingEdge(CLK:=fbReadMaxVel.Done);
IF fbReadMaxVelRisingEdge.Q AND NOT fbReadMaxVel.Error THEN
	stConfig.max_vel := fbReadMaxVel.Value;
END_IF
fbReadMaxAcc(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.MaxAccelerationSystem,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadMaxAccRisingEdge(CLK:=fbReadMaxAcc.Done);
IF fbReadMaxAccRisingEdge.Q AND NOT fbReadMaxAcc.Error THEN
	stConfig.max_acc := fbReadMaxAcc.Value;
END_IF
fbReadMaxDec(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.MaxDecelerationSystem,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadMaxDecRisingEdge(CLK:=fbReadMaxDec.Done);
IF fbReadMaxDecRisingEdge.Q AND NOT fbReadMaxDec.Error THEN
	stConfig.max_dec := fbReadMaxDec.Value;
END_IF
fbReadAcc(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisAcc,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadAccRisingEdge(CLK:=fbReadAcc.Done);
IF fbReadAccRisingEdge.Q AND NOT fbReadAcc.Error THEN
	stConfig.acc := fbReadAcc.Value;
END_IF
fbReadDec(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisDec,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadDecRisingEdge(CLK:=fbReadDec.Done);
IF fbReadDecRisingEdge.Q AND NOT fbReadDec.Error THEN
	stConfig.dec := fbReadDec.Value;
END_IF
fbReadJerk(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisJerk,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadJerkRisingEdge(CLK:=fbReadJerk.Done);
IF fbReadJerkRisingEdge.Q AND NOT fbReadJerk.Error THEN
	stConfig.jerk := fbReadJerk.Value;
END_IF
fbReadHomeSearch(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisCalibrationVelocityForward,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadHomeSearchRisingEdge(CLK:=fbReadHomeSearch.Done);
IF fbReadHomeSearchRisingEdge.Q AND NOT fbReadHomeSearch.Error THEN
	stConfig.home_search := fbReadHomeSearch.Value;
END_IF
fbReadHomeSync(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisCalibrationVelocityBackward,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadHomeSyncRisingEdge(CLK:=fbReadHomeSync.Done);
IF fbReadHomeSyncRisingEdge.Q AND NOT fbReadHomeSync.Error THEN
	stConfig.home_sync := fbReadHomeSync.Value;
END_IF
fbReadManFast(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisManualVelocityFast,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadManFastRisingEdge(CLK:=fbReadManFast.Done);
IF fbReadManFastRisingEdge.Q AND NOT fbReadManFast.Error THEN
	stConfig.man_fast := fbReadManFast.Value;
END_IF
fbReadManSlow(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisManualVelocitySlow,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadManSlowRisingEdge(CLK:=fbReadManSlow.Done);
IF fbReadManSlowRisingEdge.Q AND NOT fbReadManSlow.Error THEN
	stConfig.man_slow := fbReadManSlow.Value;
END_IF
fbReadDeadTime(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisDelayTimeVeloPosition,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadDeadTimeRisingEdge(CLK:=fbReadDeadTime.Done);
IF fbReadDeadTimeRisingEdge.Q AND NOT fbReadDeadTime.Error THEN
	stConfig.dead_time := fbReadDeadTime.Value;
END_IF
fbReadEncScale(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisEncoderScalingFactor,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadEncScaleRisingEdge(CLK:=fbReadEncScale.Done);
IF fbReadEncScaleRisingEdge.Q AND NOT fbReadEncScale.Error THEN
	stConfig.enc_scale := fbReadEncScale.Value;
END_IF
fbReadEncInvert(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisEncoderDirectionInverse,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadEncInvertRisingEdge(CLK:=fbReadEncInvert.Done);
IF fbReadEncInvertRisingEdge.Q AND NOT fbReadEncInvert.Error THEN
	stConfig.enc_invert := fbReadEncInvert.Value;
END_IF
fbReadMotInvert(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.AxisMotorDirectionInverse,
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
fbReadMotInvertRisingEdge(CLK:=fbReadMotInvert.Done);
IF fbReadMotInvertRisingEdge.Q AND NOT fbReadMotInvert.Error THEN
	stConfig.mot_invert := fbReadMotInvert.Value;
END_IF
bDone := fbReadRefVel.Done AND fbReadMaxVel.Done AND fbReadMaxAcc.Done AND fbReadMaxDec.Done AND fbReadAcc.Done AND fbReadDec.Done AND fbReadJerk.Done AND fbReadHomeSearch.Done AND fbReadHomeSync.Done AND fbReadManFast.Done AND fbReadManSlow.Done AND fbReadDeadTime.Done AND fbReadEncScale.Done AND fbReadEncInvert.Done AND fbReadMotInvert.Done
bBusy := fbReadRefVel.Busy OR fbReadMaxVel.Busy OR fbReadMaxAcc.Busy OR fbReadMaxDec.Busy OR fbReadAcc.Busy OR fbReadDec.Busy OR fbReadJerk.Busy OR fbReadHomeSearch.Busy OR fbReadHomeSync.Busy OR fbReadManFast.Busy OR fbReadManSlow.Busy OR fbReadDeadTime.Busy OR fbReadEncScale.Busy OR fbReadEncInvert.Busy OR fbReadMotInvert.Busy
bError := fbReadRefVel.Error OR fbReadMaxVel.Error OR fbReadMaxAcc.Error OR fbReadMaxDec.Error OR fbReadAcc.Error OR fbReadDec.Error OR fbReadJerk.Error OR fbReadHomeSearch.Error OR fbReadHomeSync.Error OR fbReadManFast.Error OR fbReadManSlow.Error OR fbReadDeadTime.Error OR fbReadEncScale.Error OR fbReadEncInvert.Error OR fbReadMotInvert.Error
IF NOT bError THEN
	iErrorID := 0;
ELSIF fbReadRefVel.ErrorID != 0 THEN
	iErrorID := fbReadRefVel.ErrorID;
ELSIF fbReadMaxVel.ErrorID != 0 THEN
	iErrorID := fbReadMaxVel.ErrorID;
ELSIF fbReadMaxAcc.ErrorID != 0 THEN
	iErrorID := fbReadMaxAcc.ErrorID;
ELSIF fbReadMaxDec.ErrorID != 0 THEN
	iErrorID := fbReadMaxDec.ErrorID;
ELSIF fbReadAcc.ErrorID != 0 THEN
	iErrorID := fbReadAcc.ErrorID;
ELSIF fbReadDec.ErrorID != 0 THEN
	iErrorID := fbReadDec.ErrorID;
ELSIF fbReadJerk.ErrorID != 0 THEN
	iErrorID := fbReadJerk.ErrorID;
ELSIF fbReadHomeSearch.ErrorID != 0 THEN
	iErrorID := fbReadHomeSearch.ErrorID;
ELSIF fbReadHomeSync.ErrorID != 0 THEN
	iErrorID := fbReadHomeSync.ErrorID;
ELSIF fbReadManFast.ErrorID != 0 THEN
	iErrorID := fbReadManFast.ErrorID;
ELSIF fbReadManSlow.ErrorID != 0 THEN
	iErrorID := fbReadManSlow.ErrorID;
ELSIF fbReadDeadTime.ErrorID != 0 THEN
	iErrorID := fbReadDeadTime.ErrorID;
ELSIF fbReadEncScale.ErrorID != 0 THEN
	iErrorID := fbReadEncScale.ErrorID;
ELSIF fbReadEncInvert.ErrorID != 0 THEN
	iErrorID := fbReadEncInvert.ErrorID;
ELSIF fbReadMotInvert.ErrorID != 0 THEN
	iErrorID := fbReadMotInvert.ErrorID;
END_IF
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>
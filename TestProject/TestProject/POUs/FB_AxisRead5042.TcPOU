<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="FB_AxisRead5042" Id="{f8e69a50-2a54-4489-b7d7-965f7b44587e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AxisRead5042
VAR_INPUT
	bExecute: BOOL;
	bReset: BOOL;
	stDriveRef: ST_DriveRef;
END_VAR
VAR_IN_OUT
	stConfig: ST_AxisParams;
	Axis: AXIS_REF;
END_VAR
VAR_OUTPUT
	bBusy: BOOL;
	bError: BOOL;
	iAdsErrId: UINT;
	iCANopenErrId: UINT;
END_VAR
VAR
	fbReadEncSupply: FB_CoERead_ByDriveRef;
	nIndEncSupply: WORD;
	fbReadEncClock: FB_CoERead_ByDriveRef;
	nIndEncClock: WORD;
	fbReadEncMultiBits: FB_CoERead_ByDriveRef;
	nIndEncMultiBits: WORD;
	fbReadEncSingleBits: FB_CoERead_ByDriveRef;
	nIndEncSingleBits: WORD;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// File auto-generated! Take care editing!
// Clears errors and allows a new read
IF bReset THEN
	bExecute := FALSE;
	bReset := FALSE;
END_IF
nIndEncSupply := 16#8008;
fbReadEncSupply(bExecute:=bExecute,
	stDriveRef:=stDriveRef,
	nindex:=nIndEncSupply,
	nSubIndex:=16#12,
	pDstBuf:=ADR(stConfig.enc_supply),
	cbBufLen:=SIZEOF(stConfig.enc_supply));
CASE stDriveRef.nDriveNo OF
	1:
		nIndEncClock := 16#8008;
	2:
		nIndEncClock := 16#8018;
END_CASE
fbReadEncClock(bExecute:=bExecute,
	stDriveRef:=stDriveRef,
	nindex:=nIndEncClock,
	nSubIndex:=16#13,
	pDstBuf:=ADR(stConfig.enc_clock),
	cbBufLen:=SIZEOF(stConfig.enc_clock));
CASE stDriveRef.nDriveNo OF
	1:
		nIndEncMultiBits := 16#8008;
	2:
		nIndEncMultiBits := 16#8018;
END_CASE
fbReadEncMultiBits(bExecute:=bExecute,
	stDriveRef:=stDriveRef,
	nindex:=nIndEncMultiBits,
	nSubIndex:=16#15,
	pDstBuf:=ADR(stConfig.enc_multi_bits),
	cbBufLen:=SIZEOF(stConfig.enc_multi_bits));
CASE stDriveRef.nDriveNo OF
	1:
		nIndEncSingleBits := 16#8008;
	2:
		nIndEncSingleBits := 16#8018;
END_CASE
fbReadEncSingleBits(bExecute:=bExecute,
	stDriveRef:=stDriveRef,
	nindex:=nIndEncSingleBits,
	nSubIndex:=16#16,
	pDstBuf:=ADR(stConfig.enc_single_bits),
	cbBufLen:=SIZEOF(stConfig.enc_single_bits));
bBusy := fbReadEncSupply.bBusy OR fbReadEncClock.bBusy OR fbReadEncMultiBits.bBusy OR fbReadEncSingleBits.bBusy;
bError := fbReadEncSupply.bError OR fbReadEncClock.bError OR fbReadEncMultiBits.bError OR fbReadEncSingleBits.bError;
IF NOT bError THEN
	iAdsErrId := 0;
ELSIF fbReadEncSupply.iAdsErrId > 0 THEN
	iAdsErrId := fbReadEncSupply.iAdsErrId;
ELSIF fbReadEncClock.iAdsErrId > 0 THEN
	iAdsErrId := fbReadEncClock.iAdsErrId;
ELSIF fbReadEncMultiBits.iAdsErrId > 0 THEN
	iAdsErrId := fbReadEncMultiBits.iAdsErrId;
ELSIF fbReadEncSingleBits.iAdsErrId > 0 THEN
	iAdsErrId := fbReadEncSingleBits.iAdsErrId;
END_IF
IF NOT bError THEN
	iCANopenErrId := 0;
ELSIF fbReadEncSupply.iCANopenErrId > 0 THEN
	iCANopenErrId := fbReadEncSupply.iCANopenErrId;
ELSIF fbReadEncClock.iCANopenErrId > 0 THEN
	iCANopenErrId := fbReadEncClock.iCANopenErrId;
ELSIF fbReadEncMultiBits.iCANopenErrId > 0 THEN
	iCANopenErrId := fbReadEncMultiBits.iCANopenErrId;
ELSIF fbReadEncSingleBits.iCANopenErrId > 0 THEN
	iCANopenErrId := fbReadEncSingleBits.iCANopenErrId;
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="FB_AxisRead5042">
      <LineId Id="9" Count="0" />
      <LineId Id="4" Count="4" />
      <LineId Id="84" Count="0" />
      <LineId Id="10" Count="73" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>
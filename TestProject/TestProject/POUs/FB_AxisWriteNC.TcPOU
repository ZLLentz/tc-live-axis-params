<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="FB_AxisWriteNC" Id="{f7f47c17-7b1c-42c7-9653-657995f4107e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AxisWriteNC
VAR_INPUT
	bExecute: BOOL;
	bReset: BOOL;
END_VAR
VAR_IN_OUT
	stConfig: ST_AxisParams;
	Axis: AXIS_REF;
END_VAR
VAR_OUTPUT
	bDone: BOOL;
	bBusy: BOOL;
	bError: BOOL;
	nErrorID: UDINT;
END_VAR
VAR
	fbWriteRefVel: MC_WriteParameter;
	fbWriteMaxVel: MC_WriteParameter;
	fbWriteMaxAcc: MC_WriteParameter;
	fbWriteMaxDec: MC_WriteParameter;
	fbWriteDefAcc: MC_WriteParameter;
	fbWriteDefDec: MC_WriteParameter;
	fbWriteDefJerk: MC_WriteParameter;
	fbWriteHomeSearch: MC_WriteParameter;
	fbWriteHomeSync: MC_WriteParameter;
	fbWriteManFast: MC_WriteParameter;
	fbWriteManSlow: MC_WriteParameter;
	fbWriteEnableMinSoftLimit: MC_WriteBoolParameter;
	fbWriteEnableMaxSoftLimit: MC_WriteBoolParameter;
	fbWriteMinSoftLimit: MC_WriteParameter;
	fbWriteMaxSoftLimit: MC_WriteParameter;
	fbWriteMaxPosLagValue: MC_WriteParameter;
	fbWriteMaxPosLagFilterTime: MC_WriteParameter;
	fbWriteDeadTime: MC_WriteParameter;
	fbWriteEncScale: MC_WriteParameter;
	fbWriteEncOffset: MC_WriteParameter;
	fbWriteEncInvert: MC_WriteBoolParameter;
	fbWriteMotInvert: MC_WriteBoolParameter;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// File auto-generated! Take care editing!
// Clears errors and allows a new read
IF bReset THEN
	bExecute := FALSE;
	bReset := FALSE;
END_IF
fbWriteRefVel(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisRefVeloOnRefOutput,
	Value:=stConfig.ref_vel,
	Axis:=Axis);
fbWriteMaxVel(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisMaxVelocity,
	Value:=stConfig.max_vel,
	Axis:=Axis);
fbWriteMaxAcc(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.MaxAccelerationSystem,
	Value:=stConfig.max_acc,
	Axis:=Axis);
fbWriteMaxDec(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.MaxDecelerationSystem,
	Value:=stConfig.max_dec,
	Axis:=Axis);
fbWriteDefAcc(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisAcc,
	Value:=stConfig.def_acc,
	Axis:=Axis);
fbWriteDefDec(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisDec,
	Value:=stConfig.def_dec,
	Axis:=Axis);
fbWriteDefJerk(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisJerk,
	Value:=stConfig.def_jerk,
	Axis:=Axis);
fbWriteHomeSearch(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisCalibrationVelocityForward,
	Value:=stConfig.home_search,
	Axis:=Axis);
fbWriteHomeSync(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisCalibrationVelocityBackward,
	Value:=stConfig.home_sync,
	Axis:=Axis);
fbWriteManFast(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisManualVelocityFast,
	Value:=stConfig.man_fast,
	Axis:=Axis);
fbWriteManSlow(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisManualVelocitySlow,
	Value:=stConfig.man_slow,
	Axis:=Axis);
fbWriteEnableMinSoftLimit(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.EnableLimitNeg,
	Value:=stConfig.enable_min_soft_limit,
	Axis:=Axis);
fbWriteEnableMaxSoftLimit(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.EnableLimitPos,
	Value:=stConfig.enable_max_soft_limit,
	Axis:=Axis);
fbWriteMinSoftLimit(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.SWLimitNeg,
	Value:=stConfig.min_soft_limit,
	Axis:=Axis);
fbWriteMaxSoftLimit(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.SWLimitPos,
	Value:=stConfig.max_soft_limit,
	Axis:=Axis);
fbWriteMaxPosLagValue(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.MaxPositionLag,
	Value:=stConfig.max_pos_lag_value,
	Axis:=Axis);
fbWriteMaxPosLagFilterTime(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisMaxPosLagFilterTime,
	Value:=stConfig.max_pos_lag_filter_time,
	Axis:=Axis);
fbWriteDeadTime(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisDelayTimeVeloPosition,
	Value:=stConfig.dead_time,
	Axis:=Axis);
fbWriteEncScale(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisEncoderScalingFactor,
	Value:=stConfig.enc_scale,
	Axis:=Axis);
fbWriteEncOffset(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisEncoderOffset,
	Value:=stConfig.enc_offset,
	Axis:=Axis);
fbWriteEncInvert(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisEncoderDirectionInverse,
	Value:=stConfig.enc_invert,
	Axis:=Axis);
fbWriteMotInvert(Execute:=bExecute,
	ParameterNumber:=MC_AxisParameter.AxisMotorDirectionInverse,
	Value:=stConfig.mot_invert,
	Axis:=Axis);
bDone := fbWriteRefVel.Done AND fbWriteMaxVel.Done AND fbWriteMaxAcc.Done AND fbWriteMaxDec.Done AND fbWriteDefAcc.Done AND fbWriteDefDec.Done AND fbWriteDefJerk.Done AND fbWriteHomeSearch.Done AND fbWriteHomeSync.Done AND fbWriteManFast.Done AND fbWriteManSlow.Done AND fbWriteEnableMinSoftLimit.Done AND fbWriteEnableMaxSoftLimit.Done AND fbWriteMinSoftLimit.Done AND fbWriteMaxSoftLimit.Done AND fbWriteMaxPosLagValue.Done AND fbWriteMaxPosLagFilterTime.Done AND fbWriteDeadTime.Done AND fbWriteEncScale.Done AND fbWriteEncOffset.Done AND fbWriteEncInvert.Done AND fbWriteMotInvert.Done;
bBusy := fbWriteRefVel.Busy OR fbWriteMaxVel.Busy OR fbWriteMaxAcc.Busy OR fbWriteMaxDec.Busy OR fbWriteDefAcc.Busy OR fbWriteDefDec.Busy OR fbWriteDefJerk.Busy OR fbWriteHomeSearch.Busy OR fbWriteHomeSync.Busy OR fbWriteManFast.Busy OR fbWriteManSlow.Busy OR fbWriteEnableMinSoftLimit.Busy OR fbWriteEnableMaxSoftLimit.Busy OR fbWriteMinSoftLimit.Busy OR fbWriteMaxSoftLimit.Busy OR fbWriteMaxPosLagValue.Busy OR fbWriteMaxPosLagFilterTime.Busy OR fbWriteDeadTime.Busy OR fbWriteEncScale.Busy OR fbWriteEncOffset.Busy OR fbWriteEncInvert.Busy OR fbWriteMotInvert.Busy;
bError := fbWriteRefVel.Error OR fbWriteMaxVel.Error OR fbWriteMaxAcc.Error OR fbWriteMaxDec.Error OR fbWriteDefAcc.Error OR fbWriteDefDec.Error OR fbWriteDefJerk.Error OR fbWriteHomeSearch.Error OR fbWriteHomeSync.Error OR fbWriteManFast.Error OR fbWriteManSlow.Error OR fbWriteEnableMinSoftLimit.Error OR fbWriteEnableMaxSoftLimit.Error OR fbWriteMinSoftLimit.Error OR fbWriteMaxSoftLimit.Error OR fbWriteMaxPosLagValue.Error OR fbWriteMaxPosLagFilterTime.Error OR fbWriteDeadTime.Error OR fbWriteEncScale.Error OR fbWriteEncOffset.Error OR fbWriteEncInvert.Error OR fbWriteMotInvert.Error;
IF NOT bError THEN
	nErrorID := 0;
ELSIF fbWriteRefVel.ErrorID > 0 THEN
	nErrorID := fbWriteRefVel.ErrorID;
ELSIF fbWriteMaxVel.ErrorID > 0 THEN
	nErrorID := fbWriteMaxVel.ErrorID;
ELSIF fbWriteMaxAcc.ErrorID > 0 THEN
	nErrorID := fbWriteMaxAcc.ErrorID;
ELSIF fbWriteMaxDec.ErrorID > 0 THEN
	nErrorID := fbWriteMaxDec.ErrorID;
ELSIF fbWriteDefAcc.ErrorID > 0 THEN
	nErrorID := fbWriteDefAcc.ErrorID;
ELSIF fbWriteDefDec.ErrorID > 0 THEN
	nErrorID := fbWriteDefDec.ErrorID;
ELSIF fbWriteDefJerk.ErrorID > 0 THEN
	nErrorID := fbWriteDefJerk.ErrorID;
ELSIF fbWriteHomeSearch.ErrorID > 0 THEN
	nErrorID := fbWriteHomeSearch.ErrorID;
ELSIF fbWriteHomeSync.ErrorID > 0 THEN
	nErrorID := fbWriteHomeSync.ErrorID;
ELSIF fbWriteManFast.ErrorID > 0 THEN
	nErrorID := fbWriteManFast.ErrorID;
ELSIF fbWriteManSlow.ErrorID > 0 THEN
	nErrorID := fbWriteManSlow.ErrorID;
ELSIF fbWriteEnableMinSoftLimit.ErrorID > 0 THEN
	nErrorID := fbWriteEnableMinSoftLimit.ErrorID;
ELSIF fbWriteEnableMaxSoftLimit.ErrorID > 0 THEN
	nErrorID := fbWriteEnableMaxSoftLimit.ErrorID;
ELSIF fbWriteMinSoftLimit.ErrorID > 0 THEN
	nErrorID := fbWriteMinSoftLimit.ErrorID;
ELSIF fbWriteMaxSoftLimit.ErrorID > 0 THEN
	nErrorID := fbWriteMaxSoftLimit.ErrorID;
ELSIF fbWriteMaxPosLagValue.ErrorID > 0 THEN
	nErrorID := fbWriteMaxPosLagValue.ErrorID;
ELSIF fbWriteMaxPosLagFilterTime.ErrorID > 0 THEN
	nErrorID := fbWriteMaxPosLagFilterTime.ErrorID;
ELSIF fbWriteDeadTime.ErrorID > 0 THEN
	nErrorID := fbWriteDeadTime.ErrorID;
ELSIF fbWriteEncScale.ErrorID > 0 THEN
	nErrorID := fbWriteEncScale.ErrorID;
ELSIF fbWriteEncOffset.ErrorID > 0 THEN
	nErrorID := fbWriteEncOffset.ErrorID;
ELSIF fbWriteEncInvert.ErrorID > 0 THEN
	nErrorID := fbWriteEncInvert.ErrorID;
ELSIF fbWriteMotInvert.ErrorID > 0 THEN
	nErrorID := fbWriteMotInvert.ErrorID;
END_IF
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>
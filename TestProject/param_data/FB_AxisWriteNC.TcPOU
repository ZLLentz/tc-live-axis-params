<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="FB_AxisWriteNC" Id="{f7f47c17-7b1c-42c7-9653-657995f4107e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AxisWriteNC
VAR_INPUT
	bExecute: BOOL;
	bReset: BOOL;
END_VAR
VAR_IN_OUT
	stConfig: ST_AxisParams;
	Axis: AXIS_REF;
END_VAR
VAR_OUTPUT
	bDone: BOOL;
	bBusy: BOOL;
	bError: BOOL;
	iErrorID: UDINT;
END_VAR
VAR
	iCycles: INT := 0;
	bReadOk: BOOL := FALSE;
	bInnerExec: BOOL := FALSE;
{% for item in nc_params %}
  {% if item.is_bool %}
	{{ item.fb_write }}: MC_WriteBoolParameter;
  {% else %}
	{{ item.fb_write }}: MC_WriteParameter;
  {% endif %}
{% endfor %}
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// File auto-generated! Take care editing!
// Clears errors and allows a new read
IF bReset THEN
	bExecute := FALSE;
	bReset := FALSE;
END_IF
// Fails in the first n cycles depending on terminals, wait a bit
IF NOT bReadOk THEN
	iCycles := iCycles + 1;
	IF iCycles > 100 THEN
		bReadOk := TRUE;
	END_IF
END_IF
bInnerExec := bExecute AND bReadOk;
{% for item in nc_params %}
{{ item.fb_write }}(Execute:=bInnerExec,
	ParameterNumber:=MC_AxisParameter.{{ item.MC_AxisParameter }},
	Value:=stConfig.{{ item.stConfig }},
	Axis:=Axis);
{% endfor %}
bDone := {{ nc_params|join(' AND ', attribute='fb_write_done') }};
bBusy := {{ nc_params|join(' OR ', attribute='fb_write_busy') }};
bError := {{ nc_params|join(' OR ', attribute='fb_write_error') }};
IF NOT bError THEN
	iErrorID := 0;
{% for item in nc_params %}
ELSIF {{ item.fb_write }}.ErrorID > 0 THEN
	iErrorID := {{ item.fb_write }}.ErrorID;
{% endfor %}
END_IF
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>

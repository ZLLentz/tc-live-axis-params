<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.12">
  <POU Name="FB_AxisReadNC" Id="{ae0d0d38-2171-41e5-b49c-714adaf92c76}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_AxisReadNC
VAR_INPUT
	bExecute: BOOL;
	bReset: BOOL;
END_VAR
VAR_IN_OUT
	stConfig: ST_AxisParams;
	Axis: AXIS_REF;
END_VAR
VAR_OUTPUT
	bValid: BOOL;
	bBusy: BOOL;
	bError: BOOL;
	nErrorID: UDINT;
END_VAR
VAR
{% for item in nc_params %}
  {% if item.is_bool %}
	{{ item.fb_read }}: MC_ReadBoolParameter;
  {% else %}
	{{ item.fb_read }}: MC_ReadParameter;
  {% endif %}
  	{{ item.fb_read }}RisingEdge: R_TRIG;
{% endfor %}
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// File auto-generated! Take care editing!
// Clears errors and allows a new read
IF bReset THEN
	bExecute := FALSE;
	bReset := FALSE;
END_IF
{% for item in nc_params %}
{{ item.fb_read }}(Enable:=bExecute,
	ParameterNumber:=MC_AxisParameter.{{ item.MC_AxisParameter }},
	ReadMode:=E_ReadMode.READMODE_ONCE,
	Axis:=Axis);
{{ item.fb_read }}RisingEdge(CLK:={{ item.fb_read_valid }} AND NOT {{ item.fb_read_busy }});
IF {{ item.fb_read }}RisingEdge.Q AND NOT {{ item.fb_read_error }} THEN
	stConfig.{{ item.stConfig }} := {{ item.fb_read }}.Value;
END_IF
{% endfor %}
bValid := {{ nc_params|join(' AND ', attribute='fb_read_valid') }};
bBusy := {{ nc_params|join(' OR ', attribute='fb_read_busy') }};
bError := {{ nc_params|join(' OR ', attribute='fb_read_error') }};
IF NOT bError THEN
	nErrorID := 0;
{% for item in nc_params %}
ELSIF {{ item.fb_read }}.ErrorID > 0 THEN
	nErrorID := {{ item.fb_read }}.ErrorID;
{% endfor %}
END_IF
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>
